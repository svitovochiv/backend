version: '3'

services:

#  postgres:
#    image: postgres:15.2-alpine
#    ports:
#      - ${DATABASE_EXTERNAL_PORT}:5432
#    volumes:
#      - svitovochiv-db-volume-v2:/var/lib/postgresql/data
#    environment:
#      POSTGRES_USER: ${DATABASE_USERNAME}
#      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#      POSTGRES_DB: ${DATABASE_NAME}
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}" ]
#      interval: 10s
#      timeout: 5s
#      retries: 4
#    env_file:
#      - .env
#    networks:
#      - appNetwork

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      supertokens:
        condition: service_healthy
    restart: always
    networks:
      - appNetwork
    ports:
      - '80:80'


  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:7.0
#    depends_on:
#      postgres:
#        condition: service_healthy
    env_file:
      - .env
    ports:
      - ${SUPERTOKENS_EXTERNAL_PORT}:3567
    environment:
      POSTGRESQL_CONNECTION_URI: ${DATABASE_URL_SUPERTOKENS}
    networks:
      - appNetwork
    restart: always
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  svitovochiv-db-volume-v3:

networks:
  appNetwork:
    driver: bridge
